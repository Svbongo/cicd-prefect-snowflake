name: Deploy SQL to Snowflake

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  deploy-sql:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout the cicd-sql-release branch
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: cicd-sql-release

      # 2Ô∏è‚É£ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3Ô∏è‚É£ Install Python dependencies
      - name: Install Python Dependencies
        run: |
          pip install -r requirements.txt

      # 4Ô∏è‚É£ Print working directory (for debugging)
      - name: Print Working Directory and File Tree
        run: |
          pwd
          ls -R

      # 5Ô∏è‚É£ Get latest release tag
      - name: Get Latest Release Tag
        id: get_release
        run: |
          echo "RELEASE_TAG=$(curl -s -H 'Authorization: token ${{ secrets.HUB_TOKEN }}' \
            https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)" >> $GITHUB_ENV

      # 6Ô∏è‚É£ Extract SQL file paths from release notes body
      - name: Extract SQL Paths from Latest Release Notes
        id: extract_sql
        run: |
          curl -s -H "Authorization: token ${{ secrets.HUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/latest \
            | jq -r '.body' \
            | grep -Eo '[-_/A-Za-z0-9]+\.sql' \
            | sort -u \
            > sorted_sql_ordered.txt

          echo "üìÑ Extracted SQL files:"
          cat sorted_sql_ordered.txt

      # 7Ô∏è‚É£ Sort SQL files by folder type (TABLES ‚Üí PROCEDURES ‚Üí VIEWS ‚Üí TRIGGERS)
      - name: Sort SQL Files by Type
        id: sort_sql
        run: |
          echo "üìã Sorting SQL files by type..."

          grep -i "/TABLES/" sorted_sql_ordered.txt > tmp_sql_ordered.txt || true
          grep -i "/PROCEDURES/" sorted_sql_ordered.txt >> tmp_sql_ordered.txt || true
          grep -i "/VIEWS/" sorted_sql_ordered.txt >> tmp_sql_ordered.txt || true
          grep -i "/TRIGGERS/" sorted_sql_ordered.txt >> tmp_sql_ordered.txt || true

          mv tmp_sql_ordered.txt sorted_sql_ordered.txt

          echo "üîÑ Final execution order:"
          cat sorted_sql_ordered.txt

      # 8Ô∏è‚É£ Verify file structure before running Prefect
      - name: Verify file paths
        run: |
          echo "üîç Contents of sorted_sql_ordered.txt:"
          cat sorted_sql_ordered.txt
          echo "---"
          echo "üìÅ Current Directory:"
          pwd
          echo "üìÇ Files:"
          ls -al

      # 9Ô∏è‚É£ Run Prefect Flow with the sorted SQL file list
      - name: Run Prefect Flow (Execute SQL in Snowflake)
        run: python flows/main_flow.py --release-notes sorted_sql_ordered.txt
        env:
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
