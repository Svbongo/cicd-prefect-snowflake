name: Nightly SQL Draft Release

on:
  workflow_dispatch:        # Manual trigger option
  schedule:
    - cron: '0 6 * * *'     # Runs daily at 2 AM EST (6 AM UTC)

permissions:
  contents: write

jobs:
  create-draft-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "action@github.com"

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install gh -y

      - name: Detect modified SQL files since last tag
        id: detect_sqls
        run: |
          echo "🔍 Finding modified .sql files since last tag..."

          LAST_TAG=$(git tag --sort=-creatordate | head -n 1)
          echo "🕓 Latest tag: $LAST_TAG"

          if [ -z "$LAST_TAG" ]; then
            echo "No tag found. Falling back to last 10 commits."
            git diff --name-status $(git rev-list --max-count=10 HEAD) | grep '\.sql$' || true > raw_sql_changes.txt
          else
            git diff --name-status "$LAST_TAG"..HEAD | grep '\.sql$' || true > raw_sql_changes.txt
          fi

          awk '$1 == "A" || $1 == "M" || $1 == "R100" { print $2 }' raw_sql_changes.txt > sql_files.txt

          echo "sql_files<<EOF" >> $GITHUB_OUTPUT
          cat sql_files.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Debug detected files
        run: |
          echo "🧾 SQL files detected:"
          cat sql_files.txt || echo "❌ None found"

      - name: Create release notes
        run: |
          echo "📝 Modified SQL Files:" > release_notes.md
          cat sql_files.txt | while read file; do
            echo "- $file" >> release_notes.md
          done

      - name: Create GitHub Draft Release (no tag)
        env:
          GH_TOKEN: ${{ secrets.HUB_TOKEN }}
        run: |
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
          curl -X POST \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/releases \
            -d @- <<EOF
          {
            "tag_name": "nightly-placeholder",
            "name": "Nightly SQL Release - $TIMESTAMP",
            "body": "$(cat release_notes.md)",
            "draft": true,
            "prerelease": false,
            "target_commitish": "ci-sql-release"
          }
          EOF
