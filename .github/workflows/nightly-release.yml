name: Nightly SQL Release

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *'  # 2AM EST (6AM UTC)

permissions:
  contents: write

jobs:
  nightly-sql-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout cicd-sql-release branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: cicd-sql-release

      - name: Set up GitHub CLI
        run: |
          sudo apt update
          sudo apt install gh -y

      - name: Fetch main branch
        run: git fetch origin main:main

      - name: Detect modified SQL files between main and cicd-sql-release HEAD
        id: detect_sqls
        run: |
          echo "🧠 Detecting new/modified .sql files between main and cicd-sql-release HEAD..."
      
          # Step 1: Generate raw git diff
          git fetch origin main
          git diff --name-status origin/main...HEAD > raw_diff.txt
      
          # Step 2: Extract only added/modified/renamed .sql files (case-insensitive match)
          grep -Ei '\.sql$' raw_diff.txt | awk '$1 ~ /^(A|M|R100)$/ { print $2 }' > raw_sql_changes.txt || touch raw_sql_changes.txt
      
          # Step 3: Normalize filenames to UPPERCASE (cross-platform safe)
          awk '{ print toupper($1) }' raw_sql_changes.txt | sort | uniq > sql_files.txt || touch sql_files.txt
      
          # Step 4: Save output to GitHub Actions output block
          echo "sql_files<<EOF" >> $GITHUB_OUTPUT
          cat sql_files.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
          # Debug info
          echo "📂 Final detected SQL files:"
          cat sql_files.txt
      

      - name: Debug detected files
        run: |
          echo "🧾 SQL files detected:"
          cat sql_files.txt || echo "❌ None found"

      - name: Create release notes
        run: |
          echo "📝 Modified SQL Files:" > release_notes.md
          if [ -s sql_files.txt ]; then
            cat sql_files.txt | while read file; do
              echo "- $file" >> release_notes.md
            done
          else
            echo "- No SQL files found" >> release_notes.md
          fi

      - name: Generate unique nightly tag
        id: generate_tag
        run: |
          BASE_TAG="nightly-$(date +%Y-%m-%d)"
          i=1
          while gh release view "${BASE_TAG}-$(printf "%03d" $i)" &>/dev/null; do
            i=$((i+1))
          done
          TAG_NAME="${BASE_TAG}-$(printf "%03d" $i)"
          echo "✅ Using tag: $TAG_NAME"
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.HUB_TOKEN }}

      - name: Create new nightly release (not draft, marked as latest)
        run: |
          gh release create "${{ steps.generate_tag.outputs.tag_name }}" \
            --title "Nightly SQL Release - $(date '+%Y-%m-%d %H:%M:%S')" \
            --notes-file release_notes.md \
            --target cicd-sql-release \
            --latest
        env:
          GH_TOKEN: ${{ secrets.HUB_TOKEN }}
