name: Nightly SQL Draft Release

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *'  # 2AM EST (6AM UTC)

permissions:
  contents: write

jobs:
  nightly-sql-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout cicd-sql-release branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: cicd-sql-release

      - name: Set up GitHub CLI
        run: |
          sudo apt update
          sudo apt install gh -y

      - name: Fetch main branch
        run: |
          git fetch origin main:main

      - name: Detect modified SQL files between main and cicd-sql-release HEAD
        id: detect_sqls
        run: |
          set -eo pipefail
          echo "🧠 Detecting new/modified .sql files between main and cicd-sql-release HEAD..."

          # Use last tag if it exists, fallback to main branch diff
          if git rev-parse nightly-placeholder >/dev/null 2>&1; then
            echo "🔖 Using tag nightly-placeholder for diff"
            git diff --name-status nightly-placeholder..origin/main > raw_diff.txt
          else
            echo "⚠️ No nightly-placeholder tag found. Diffing HEAD of cicd-sql-release with main"
            git diff --name-status origin/main...HEAD > raw_diff.txt
          fi

          echo "📄 Raw diff content:"
          cat raw_diff.txt

          grep '\.sql$' raw_diff.txt | awk '$1 ~ /^(A|M|R100)$/ { print $2 }' > raw_sql_changes.txt || touch raw_sql_changes.txt

          echo "📁 Filtered .sql changes:"
          cat raw_sql_changes.txt || echo "❌ No matching .sql changes"

          awk '{ print $1 }' raw_sql_changes.txt > sql_files.txt || touch sql_files.txt

          echo "sql_files<<EOF" >> $GITHUB_OUTPUT
          cat sql_files.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Debug detected files
        run: |
          echo "🧾 SQL files detected:"
          cat sql_files.txt || echo "❌ None found"

      - name: Create release notes
        run: |
          echo "📝 Modified SQL Files:" > release_notes.md
          if [ -s sql_files.txt ]; then
            cat sql_files.txt | while read file; do
              echo "- $file" >> release_notes.md
            done
          else
            echo "- No SQL files found" >> release_notes.md
          fi

      - name: Delete existing nightly release if exists
        continue-on-error: true
        run: |
          gh release delete nightly-placeholder --yes || true
          git tag -d nightly-placeholder || true
          git push origin :refs/tags/nightly-placeholder || true

      - name: Create new nightly draft release (with tag)
        run: |
          gh release create nightly-placeholder \
            --title "Nightly SQL Release - $(date '+%Y-%m-%d %H:%M:%S')" \
            --notes-file release_notes.md \
            --target cicd-sql-release \

        env:
          GH_TOKEN: ${{ secrets.HUB_TOKEN }}
